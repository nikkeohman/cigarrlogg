import sqlite3
import plotly.graph_objs as go
from datetime import datetime
import os

# Connect to the database
conn = sqlite3.connect("cigarrdata.db")
cursor = conn.cursor()

# Fetch the latest 100 logs with quote and author
cursor.execute("""
    SELECT l.timestamp, l.temperature, l.humidity, q.quote, q.author
    FROM logg l
    JOIN quotes q ON l.quote_id = q.id
    ORDER BY l.timestamp DESC
    LIMIT 100
""")
data = cursor.fetchall()
data.reverse()  # oldest first

# Separate values for plotting
timestamps = [datetime.fromisoformat(row[0]) for row in data]
temperatures = [row[1] for row in data]
humidities = [row[2] for row in data]
latest_quote = data[-1][3]
latest_author = data[-1][4]
latest_temp = temperatures[-1]
latest_hum = humidities[-1]

# Create temperature graph
temp_trace = go.Scatter(x=timestamps, y=temperatures, mode='lines+markers', name='Temperature (¬∞C)')
temp_layout = go.Layout(title='Temperature History', xaxis=dict(title='Time'), yaxis=dict(title='¬∞C'), template="plotly_dark")
temp_fig = go.Figure(data=[temp_trace], layout=temp_layout)
temp_div = temp_fig.to_html(full_html=False)

# Create humidity graph
hum_trace = go.Scatter(x=timestamps, y=humidities, mode='lines+markers', name='Humidity (%)')
hum_layout = go.Layout(title='Humidity History', xaxis=dict(title='Time'), yaxis=dict(title='%'), template="plotly_dark")
hum_fig = go.Figure(data=[hum_trace], layout=hum_layout)
hum_div = hum_fig.to_html(full_html=False)

# Fetch statistics
cursor.execute("SELECT * FROM statistics")
stats = cursor.fetchall()

conn.close()

# Create HTML
with open("docs/index.html", "w") as f:
    f.write(f"""
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cigar Humidor Monitor</title>
    <link rel="icon" href="favicon.ico">
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap" rel="stylesheet">
    <style>
        body {{ font-family: 'Roboto Mono', monospace; margin: 2rem; background-color: #121212; color: #f5f5f5; }}
        h1, h2 {{ color: #f5b041; }}
        .quote {{ font-style: italic; margin-top: 1rem; }}
        .charts {{ margin-top: 2rem; }}
        table {{ border-collapse: collapse; margin-top: 2rem; width: 100%; background-color: #1e1e1e; color: #f5f5f5; }}
        th, td {{ padding: 8px 12px; border: 1px solid #333; text-align: center; }}
        th {{ background-color: #2e2e2e; color: #f5b041; }}
        .latest-values {{ font-size: 1.2rem; margin: 1rem 0; }}
        .card {{ background: rgba(255,255,255,0.05); padding: 1rem; border-radius: 10px; margin-bottom: 1rem; box-shadow: 0 0 10px rgba(0,0,0,0.3); }}
    </style>
</head>
<body>
    <h1>üå°Ô∏è Cigar Humidor Dashboard</h1>

    <div class="quote card">üóØÔ∏è "{latest_quote}"<br>‚Äî {latest_author}</div>

    <div class="charts">
        <div class="card latest-values">üî• Latest temperature: <strong>{latest_temp:.2f} ¬∞C</strong></div>
        <div class="card">{temp_div}</div>
        <div class="card latest-values">üíß Latest humidity: <strong>{latest_hum:.2f} %</strong></div>
        <div class="card">{hum_div}</div>
    </div>

    <h2>üìä Historical Statistics</h2>
    <div class="card">
    <table>
        <thead>
            <tr>
                <th>Period</th>
                <th>Avg Temp (¬∞C)</th>
                <th>Min Temp</th>
                <th>Max Temp</th>
                <th>Latest Temp</th>
                <th>Avg Hum (%)</th>
                <th>Min Hum</th>
                <th>Max Hum</th>
                <th>Latest Hum</th>
            </tr>
        </thead>
        <tbody>
""")
    for row in stats:
        f.write("<tr>" + "".join(f"<td>{val:.2f}</td>" if isinstance(val, float) else f"<td>{val}</td>" for val in row) + "</tr>\n")
    f.write("""
        </tbody>
    </table>
    </div>
</body>
</html>
""")

print("‚úÖ HTML page generated: docs/index.html")
